#include<stdio.h>
#include<string.h>

struct{
	char name[40];
	int age;
	
}person,person_copy;

//模拟实现memcpy函数
void* my_memcpy(void* desc,void* src,size_t count)
{
	void* ret=desc;
	while(count--)
	{
		*(char*)desc=*(char*)src;
		desc=(char*) desc+1;
		src=(char*) src+1;
	}
	
	return ret;
 } 
 //模拟实现memmove函数 
 void * my_memmove ( void * dst, const void * src, size_t count) 
 {
 	void* ret=dst;
 	//不存在覆盖的情况下,直接进行拷贝 
	 if(dst<=src||((char*)dst>=(char*)src+count))
	 {
	 	while(count--)
		 {
		 	*(char*) dst=*(char*) src;
		 	dst=(char*) dst+1;
		 	src=(char*) src+1;
		  } 
	  } 
	  //存在覆盖，逆向拷贝。 
	  else
	  {
	  	dst=(char*) dst+count-1;
		src=(char*) src+count-1;
		while(count--)
		{
			*(char*) dst= *(char*) src;
			dst=(char*) dst-1;
			src=(char*) src-1;
		}
	  }
	  return ret;
 }
int main()
{
	/*char myname[]="Poerre de Fermat";
	
	//用memcpy拷贝字符串举例
	memcpy(person.name,myname,strlen(myname)+1);
	person.age= 46;
	
	//用memcpy拷贝结构体
	memcpy(&person_copy,&person,sizeof(person));
	
	printf("person_copy: %s,%d\n",person_copy.name,person_copy.age);
	return 0; */
	char str[]="memmove can be very useful......";
	my_memmove(str+20,str+15,11);
	puts(str);
 } 